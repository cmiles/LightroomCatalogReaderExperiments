// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace LrDb.Models
{
    public partial class LrDbContext : DbContext
    {
        public LrDbContext()
        {
        }

        public LrDbContext(DbContextOptions<LrDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Adobe_AdditionalMetadata> Adobe_AdditionalMetadata { get; set; }
        public virtual DbSet<Adobe_faceProperties> Adobe_faceProperties { get; set; }
        public virtual DbSet<Adobe_imageDevelopBeforeSettings> Adobe_imageDevelopBeforeSettings { get; set; }
        public virtual DbSet<Adobe_imageDevelopSettings> Adobe_imageDevelopSettings { get; set; }
        public virtual DbSet<Adobe_imageProofSettings> Adobe_imageProofSettings { get; set; }
        public virtual DbSet<Adobe_imageProperties> Adobe_imageProperties { get; set; }
        public virtual DbSet<Adobe_images> Adobe_images { get; set; }
        public virtual DbSet<Adobe_libraryImageDevelop3DLUTColorTable> Adobe_libraryImageDevelop3DLUTColorTable { get; set; }
        public virtual DbSet<Adobe_libraryImageDevelopHistoryStep> Adobe_libraryImageDevelopHistoryStep { get; set; }
        public virtual DbSet<Adobe_libraryImageDevelopSnapshot> Adobe_libraryImageDevelopSnapshot { get; set; }
        public virtual DbSet<Adobe_libraryImageFaceProcessHistory> Adobe_libraryImageFaceProcessHistory { get; set; }
        public virtual DbSet<Adobe_namedIdentityPlate> Adobe_namedIdentityPlate { get; set; }
        public virtual DbSet<Adobe_variables> Adobe_variables { get; set; }
        public virtual DbSet<Adobe_variablesTable> Adobe_variablesTable { get; set; }
        public virtual DbSet<AgDNGProxyInfo> AgDNGProxyInfo { get; set; }
        public virtual DbSet<AgDNGProxyInfoUpdater> AgDNGProxyInfoUpdater { get; set; }
        public virtual DbSet<AgDeletedOzAlbumAssetIds> AgDeletedOzAlbumAssetIds { get; set; }
        public virtual DbSet<AgDeletedOzAlbumIds> AgDeletedOzAlbumIds { get; set; }
        public virtual DbSet<AgDeletedOzAssetIds> AgDeletedOzAssetIds { get; set; }
        public virtual DbSet<AgDeletedOzSpaceIds> AgDeletedOzSpaceIds { get; set; }
        public virtual DbSet<AgDevelopAdditionalMetadata> AgDevelopAdditionalMetadata { get; set; }
        public virtual DbSet<AgFolderContent> AgFolderContent { get; set; }
        public virtual DbSet<AgHarvestedDNGMetadata> AgHarvestedDNGMetadata { get; set; }
        public virtual DbSet<AgHarvestedExifMetadata> AgHarvestedExifMetadata { get; set; }
        public virtual DbSet<AgHarvestedIptcMetadata> AgHarvestedIptcMetadata { get; set; }
        public virtual DbSet<AgHarvestedMetadataWorklist> AgHarvestedMetadataWorklist { get; set; }
        public virtual DbSet<AgInternedExifCameraModel> AgInternedExifCameraModel { get; set; }
        public virtual DbSet<AgInternedExifCameraSN> AgInternedExifCameraSN { get; set; }
        public virtual DbSet<AgInternedExifLens> AgInternedExifLens { get; set; }
        public virtual DbSet<AgInternedIptcCity> AgInternedIptcCity { get; set; }
        public virtual DbSet<AgInternedIptcCountry> AgInternedIptcCountry { get; set; }
        public virtual DbSet<AgInternedIptcCreator> AgInternedIptcCreator { get; set; }
        public virtual DbSet<AgInternedIptcIsoCountryCode> AgInternedIptcIsoCountryCode { get; set; }
        public virtual DbSet<AgInternedIptcJobIdentifier> AgInternedIptcJobIdentifier { get; set; }
        public virtual DbSet<AgInternedIptcLocation> AgInternedIptcLocation { get; set; }
        public virtual DbSet<AgInternedIptcState> AgInternedIptcState { get; set; }
        public virtual DbSet<AgLastCatalogExport> AgLastCatalogExport { get; set; }
        public virtual DbSet<AgLibraryCollection> AgLibraryCollection { get; set; }
        public virtual DbSet<AgLibraryCollectionChangeCounter> AgLibraryCollectionChangeCounter { get; set; }
        public virtual DbSet<AgLibraryCollectionContent> AgLibraryCollectionContent { get; set; }
        public virtual DbSet<AgLibraryCollectionCoverImage> AgLibraryCollectionCoverImage { get; set; }
        public virtual DbSet<AgLibraryCollectionImage> AgLibraryCollectionImage { get; set; }
        public virtual DbSet<AgLibraryCollectionImageChangeCounter> AgLibraryCollectionImageChangeCounter { get; set; }
        public virtual DbSet<AgLibraryCollectionImageOzAlbumAssetIds> AgLibraryCollectionImageOzAlbumAssetIds { get; set; }
        public virtual DbSet<AgLibraryCollectionImageOzSortOrder> AgLibraryCollectionImageOzSortOrder { get; set; }
        public virtual DbSet<AgLibraryCollectionLabel> AgLibraryCollectionLabel { get; set; }
        public virtual DbSet<AgLibraryCollectionOzAlbumIds> AgLibraryCollectionOzAlbumIds { get; set; }
        public virtual DbSet<AgLibraryCollectionStack> AgLibraryCollectionStack { get; set; }
        public virtual DbSet<AgLibraryCollectionStackData> AgLibraryCollectionStackData { get; set; }
        public virtual DbSet<AgLibraryCollectionStackImage> AgLibraryCollectionStackImage { get; set; }
        public virtual DbSet<AgLibraryCollectionSyncedAlbumData> AgLibraryCollectionSyncedAlbumData { get; set; }
        public virtual DbSet<AgLibraryCollectionTrackedAssets> AgLibraryCollectionTrackedAssets { get; set; }
        public virtual DbSet<AgLibraryFace> AgLibraryFace { get; set; }
        public virtual DbSet<AgLibraryFaceCluster> AgLibraryFaceCluster { get; set; }
        public virtual DbSet<AgLibraryFaceData> AgLibraryFaceData { get; set; }
        public virtual DbSet<AgLibraryFile> AgLibraryFile { get; set; }
        public virtual DbSet<AgLibraryFileAssetMetadata> AgLibraryFileAssetMetadata { get; set; }
        public virtual DbSet<AgLibraryFolder> AgLibraryFolder { get; set; }
        public virtual DbSet<AgLibraryFolderFavorite> AgLibraryFolderFavorite { get; set; }
        public virtual DbSet<AgLibraryFolderLabel> AgLibraryFolderLabel { get; set; }
        public virtual DbSet<AgLibraryFolderStack> AgLibraryFolderStack { get; set; }
        public virtual DbSet<AgLibraryFolderStackData> AgLibraryFolderStackData { get; set; }
        public virtual DbSet<AgLibraryFolderStackImage> AgLibraryFolderStackImage { get; set; }
        public virtual DbSet<AgLibraryIPTC> AgLibraryIPTC { get; set; }
        public virtual DbSet<AgLibraryImageChangeCounter> AgLibraryImageChangeCounter { get; set; }
        public virtual DbSet<AgLibraryImageOzAssetIds> AgLibraryImageOzAssetIds { get; set; }
        public virtual DbSet<AgLibraryImageSaveXMP> AgLibraryImageSaveXMP { get; set; }
        public virtual DbSet<AgLibraryImageSearchData> AgLibraryImageSearchData { get; set; }
        public virtual DbSet<AgLibraryImageSyncedAssetData> AgLibraryImageSyncedAssetData { get; set; }
        public virtual DbSet<AgLibraryImageXMPUpdater> AgLibraryImageXMPUpdater { get; set; }
        public virtual DbSet<AgLibraryImport> AgLibraryImport { get; set; }
        public virtual DbSet<AgLibraryImportImage> AgLibraryImportImage { get; set; }
        public virtual DbSet<AgLibraryKeyword> AgLibraryKeyword { get; set; }
        public virtual DbSet<AgLibraryKeywordCooccurrence> AgLibraryKeywordCooccurrence { get; set; }
        public virtual DbSet<AgLibraryKeywordFace> AgLibraryKeywordFace { get; set; }
        public virtual DbSet<AgLibraryKeywordImage> AgLibraryKeywordImage { get; set; }
        public virtual DbSet<AgLibraryKeywordPopularity> AgLibraryKeywordPopularity { get; set; }
        public virtual DbSet<AgLibraryKeywordSynonym> AgLibraryKeywordSynonym { get; set; }
        public virtual DbSet<AgLibraryOzCommentIds> AgLibraryOzCommentIds { get; set; }
        public virtual DbSet<AgLibraryOzFavoriteIds> AgLibraryOzFavoriteIds { get; set; }
        public virtual DbSet<AgLibraryOzFeedbackInfo> AgLibraryOzFeedbackInfo { get; set; }
        public virtual DbSet<AgLibraryPublishedCollection> AgLibraryPublishedCollection { get; set; }
        public virtual DbSet<AgLibraryPublishedCollectionContent> AgLibraryPublishedCollectionContent { get; set; }
        public virtual DbSet<AgLibraryPublishedCollectionImage> AgLibraryPublishedCollectionImage { get; set; }
        public virtual DbSet<AgLibraryPublishedCollectionLabel> AgLibraryPublishedCollectionLabel { get; set; }
        public virtual DbSet<AgLibraryRootFolder> AgLibraryRootFolder { get; set; }
        public virtual DbSet<AgLibraryUpdatedImages> AgLibraryUpdatedImages { get; set; }
        public virtual DbSet<AgMRULists> AgMRULists { get; set; }
        public virtual DbSet<AgMetadataSearchIndex> AgMetadataSearchIndex { get; set; }
        public virtual DbSet<AgOutputImageAsset> AgOutputImageAsset { get; set; }
        public virtual DbSet<AgOzSpaceAlbumIds> AgOzSpaceAlbumIds { get; set; }
        public virtual DbSet<AgOzSpaceIds> AgOzSpaceIds { get; set; }
        public virtual DbSet<AgPendingOzAlbumAssetIds> AgPendingOzAlbumAssetIds { get; set; }
        public virtual DbSet<AgPendingOzAssetBinaryDownloads> AgPendingOzAssetBinaryDownloads { get; set; }
        public virtual DbSet<AgPendingOzAssets> AgPendingOzAssets { get; set; }
        public virtual DbSet<AgPhotoComment> AgPhotoComment { get; set; }
        public virtual DbSet<AgPhotoProperty> AgPhotoProperty { get; set; }
        public virtual DbSet<AgPhotoPropertyArrayElement> AgPhotoPropertyArrayElement { get; set; }
        public virtual DbSet<AgPhotoPropertySpec> AgPhotoPropertySpec { get; set; }
        public virtual DbSet<AgPublishListenerWorklist> AgPublishListenerWorklist { get; set; }
        public virtual DbSet<AgRemotePhoto> AgRemotePhoto { get; set; }
        public virtual DbSet<AgSearchablePhotoProperty> AgSearchablePhotoProperty { get; set; }
        public virtual DbSet<AgSearchablePhotoPropertyArrayElement> AgSearchablePhotoPropertyArrayElement { get; set; }
        public virtual DbSet<AgSourceColorProfileConstants> AgSourceColorProfileConstants { get; set; }
        public virtual DbSet<AgSpecialSourceContent> AgSpecialSourceContent { get; set; }
        public virtual DbSet<AgTempImages> AgTempImages { get; set; }
        public virtual DbSet<AgUnsupportedOzAssets> AgUnsupportedOzAssets { get; set; }
        public virtual DbSet<AgVideoInfo> AgVideoInfo { get; set; }
        public virtual DbSet<LrMobileSyncChangeCounter> LrMobileSyncChangeCounter { get; set; }
        public virtual DbSet<MigratedCollectionImages> MigratedCollectionImages { get; set; }
        public virtual DbSet<MigratedCollections> MigratedCollections { get; set; }
        public virtual DbSet<MigratedImages> MigratedImages { get; set; }
        public virtual DbSet<MigratedInfo> MigratedInfo { get; set; }
        public virtual DbSet<MigrationSchemaVersion> MigrationSchemaVersion { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlite("Data Source=C:\\Code\\LRDb\\CM-Test.lrcat");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Adobe_AdditionalMetadata>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_Adobe_AdditionalMetadata_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.image, e.externalXmpIsDirty }, "index_Adobe_AdditionalMetadata_imageAndStatus");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.lastSynchronizedTimestamp)
                    .IsRequired()
                    .HasDefaultValueSql("-63113817600");

                entity.Property(e => e.xmp)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<Adobe_faceProperties>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.face, "index_Adobe_faceProperties_face");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<Adobe_imageDevelopBeforeSettings>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.developSettings, "index_Adobe_imageDevelopBeforeSettings_developSettings");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<Adobe_imageDevelopSettings>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.digest, "index_Adobe_imageDevelopSettings_digest");

                entity.HasIndex(e => e.image, "index_Adobe_imageDevelopSettings_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<Adobe_imageProofSettings>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_Adobe_imageProofSettings_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<Adobe_imageProperties>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_Adobe_imageProperties_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.image, "index_Adobe_imageProperties_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<Adobe_images>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_Adobe_images_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.captureTime, "index_Adobe_images_captureTime");

                entity.HasIndex(e => e.masterImage, "index_Adobe_images_masterImage");

                entity.HasIndex(e => e.originalRootEntity, "index_Adobe_images_originalRootEntity");

                entity.HasIndex(e => new { e.rating, e.captureTime }, "index_Adobe_images_ratingAndCaptureTime");

                entity.HasIndex(e => e.rootFile, "index_Adobe_images_rootFile");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.aspectRatioCache)
                    .IsRequired()
                    .HasDefaultValueSql("-1");

                entity.Property(e => e.bitDepth)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.colorChannels)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.colorLabels)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.colorMode)
                    .IsRequired()
                    .HasDefaultValueSql("-1");

                entity.Property(e => e.copyCreationTime)
                    .IsRequired()
                    .HasDefaultValueSql("-63113817600");

                entity.Property(e => e.fileFormat)
                    .IsRequired()
                    .HasDefaultValueSql("'unset'");

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.pick)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.positionInFolder)
                    .IsRequired()
                    .HasDefaultValueSql("'z'");

                entity.Property(e => e.touchCount)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.touchTime)
                    .IsRequired()
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<Adobe_libraryImageDevelop3DLUTColorTable>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.LUTHash, "IX_Adobe_libraryImageDevelop3DLUTColorTable_LUTHash")
                    .IsUnique();

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<Adobe_libraryImageDevelopHistoryStep>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_Adobe_libraryImageDevelopHistoryStep_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.image, e.dateCreated }, "index_Adobe_libraryImageDevelopHistoryStep_imageDateCreated");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<Adobe_libraryImageDevelopSnapshot>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_Adobe_libraryImageDevelopSnapshot_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.image, "index_Adobe_libraryImageDevelopSnapshot_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<Adobe_libraryImageFaceProcessHistory>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_Adobe_libraryImageFaceProcessHistory_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<Adobe_namedIdentityPlate>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_Adobe_namedIdentityPlate_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.description, "index_Adobe_namedIdentityPlate_description");

                entity.HasIndex(e => e.identityPlateHash, "index_Adobe_namedIdentityPlate_identityPlateHash");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<Adobe_variables>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_Adobe_variables_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.name, "index_Adobe_variables_name");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<Adobe_variablesTable>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_Adobe_variablesTable_id_global")
                    .IsUnique();

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.value)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgDNGProxyInfo>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => new { e.status, e.statusDateTime, e.fileUUID }, "index_AgDNGProxyInfo_statusDateTimeForUUID");

                entity.HasIndex(e => new { e.fileUUID, e.status, e.statusDateTime }, "index_AgDNGProxyInfo_uuidStatusDateTime");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.fileUUID)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.status)
                    .IsRequired()
                    .HasDefaultValueSql("'U'");

                entity.Property(e => e.statusDateTime)
                    .IsRequired()
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<AgDNGProxyInfoUpdater>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.taskID, "IX_AgDNGProxyInfoUpdater_taskID")
                    .IsUnique();

                entity.HasIndex(e => new { e.taskStatus, e.whenPosted, e.taskID }, "index_AgDNGProxyInfoUpdater_statusCluster");

                entity.HasIndex(e => new { e.taskID, e.whenPosted, e.taskStatus }, "index_AgDNGProxyInfoUpdater_taskIDCluster");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.taskID)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.taskStatus)
                    .IsRequired()
                    .HasDefaultValueSql("'pending'");

                entity.Property(e => e.whenPosted)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgDeletedOzAlbumAssetIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.changeCounter, e.ozCatalogId, e.ozAlbumAssetId }, "index_AgDeletedOzAlbumAssetIds_changeCounter");

                entity.HasIndex(e => new { e.ozCatalogId, e.ozAlbumAssetId }, "index_AgDeletedOzAlbumAssetIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.changeCounter).HasDefaultValueSql("0");

                entity.Property(e => e.ozAlbumAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();
            });

            modelBuilder.Entity<AgDeletedOzAlbumIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.changeCounter, e.ozCatalogId, e.ozAlbumId }, "index_AgDeletedOzAlbumIds_changeCounter");

                entity.HasIndex(e => new { e.ozCatalogId, e.ozAlbumId }, "index_AgDeletedOzAlbumIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.changeCounter).HasDefaultValueSql("0");

                entity.Property(e => e.ozAlbumId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();
            });

            modelBuilder.Entity<AgDeletedOzAssetIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.changeCounter, e.ozCatalogId, e.ozAssetId }, "index_AgDeletedOzAssetIds_changeCounter");

                entity.HasIndex(e => new { e.ozCatalogId, e.ozAssetId }, "index_AgDeletedOzAssetIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.changeCounter).HasDefaultValueSql("0");

                entity.Property(e => e.ozAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();
            });

            modelBuilder.Entity<AgDeletedOzSpaceIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozCatalogId, e.ozSpaceId }, "index_AgDeletedOzSpaceIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.changeCounter).HasDefaultValueSql("0");

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.ozSpaceId).IsRequired();
            });

            modelBuilder.Entity<AgDevelopAdditionalMetadata>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_AgDevelopAdditionalMetadata_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgFolderContent>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgFolderContent_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.containingFolder, "index_AgFolderContent_containingFolder");

                entity.HasIndex(e => e.owningModule, "index_AgFolderContent_owningModule");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<AgHarvestedDNGMetadata>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => new { e.hasFastLoadData, e.image, e.isDNG, e.hasLossyCompression, e.isReducedResolution, e.isPano, e.isHDR }, "index_AgHarvestedDNGMetadata_byHasFastLoadData");

                entity.HasIndex(e => new { e.hasLossyCompression, e.image, e.isDNG, e.hasFastLoadData, e.isReducedResolution, e.isPano, e.isHDR }, "index_AgHarvestedDNGMetadata_byHasLossyCompression");

                entity.HasIndex(e => new { e.image, e.isDNG, e.hasFastLoadData, e.hasLossyCompression, e.isReducedResolution, e.isPano, e.isHDR }, "index_AgHarvestedDNGMetadata_byImage");

                entity.HasIndex(e => new { e.isDNG, e.image, e.hasFastLoadData, e.hasLossyCompression, e.isReducedResolution, e.isPano, e.isHDR }, "index_AgHarvestedDNGMetadata_byIsDNG");

                entity.HasIndex(e => new { e.isHDR, e.image, e.isDNG, e.hasFastLoadData, e.hasLossyCompression, e.isReducedResolution, e.isPano }, "index_AgHarvestedDNGMetadata_byIsHDR");

                entity.HasIndex(e => new { e.isPano, e.image, e.isDNG, e.hasFastLoadData, e.hasLossyCompression, e.isReducedResolution, e.isHDR }, "index_AgHarvestedDNGMetadata_byIsPano");

                entity.HasIndex(e => new { e.isReducedResolution, e.image, e.isDNG, e.hasFastLoadData, e.hasLossyCompression, e.isPano, e.isHDR }, "index_AgHarvestedDNGMetadata_byIsReducedResolution");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgHarvestedExifMetadata>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.aperture, "index_AgHarvestedExifMetadata_aperture");

                entity.HasIndex(e => e.cameraModelRef, "index_AgHarvestedExifMetadata_cameraModelRef");

                entity.HasIndex(e => e.cameraSNRef, "index_AgHarvestedExifMetadata_cameraSNRef");

                entity.HasIndex(e => new { e.dateYear, e.dateMonth, e.dateDay, e.image }, "index_AgHarvestedExifMetadata_date");

                entity.HasIndex(e => e.flashFired, "index_AgHarvestedExifMetadata_flashFired");

                entity.HasIndex(e => e.focalLength, "index_AgHarvestedExifMetadata_focalLength");

                entity.HasIndex(e => new { e.hasGPS, e.gpsLatitude, e.gpsLongitude, e.image }, "index_AgHarvestedExifMetadata_gpsCluster");

                entity.HasIndex(e => e.image, "index_AgHarvestedExifMetadata_image");

                entity.HasIndex(e => e.isoSpeedRating, "index_AgHarvestedExifMetadata_isoSpeedRating");

                entity.HasIndex(e => e.lensRef, "index_AgHarvestedExifMetadata_lensRef");

                entity.HasIndex(e => e.shutterSpeed, "index_AgHarvestedExifMetadata_shutterSpeed");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.gpsSequence)
                    .IsRequired()
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<AgHarvestedIptcMetadata>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.cityRef, "index_AgHarvestedIptcMetadata_cityRef");

                entity.HasIndex(e => e.copyrightState, "index_AgHarvestedIptcMetadata_copyrightState");

                entity.HasIndex(e => e.countryRef, "index_AgHarvestedIptcMetadata_countryRef");

                entity.HasIndex(e => e.creatorRef, "index_AgHarvestedIptcMetadata_creatorRef");

                entity.HasIndex(e => e.image, "index_AgHarvestedIptcMetadata_image");

                entity.HasIndex(e => e.isoCountryCodeRef, "index_AgHarvestedIptcMetadata_isoCountryCodeRef");

                entity.HasIndex(e => e.jobIdentifierRef, "index_AgHarvestedIptcMetadata_jobIdentifierRef");

                entity.HasIndex(e => e.locationDataOrigination, "index_AgHarvestedIptcMetadata_locationDataOrigination");

                entity.HasIndex(e => e.locationRef, "index_AgHarvestedIptcMetadata_locationRef");

                entity.HasIndex(e => e.stateRef, "index_AgHarvestedIptcMetadata_stateRef");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.locationDataOrigination)
                    .IsRequired()
                    .HasDefaultValueSql("'unset'");

                entity.Property(e => e.locationGPSSequence)
                    .IsRequired()
                    .HasDefaultValueSql("-1");
            });

            modelBuilder.Entity<AgHarvestedMetadataWorklist>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.taskID, "IX_AgHarvestedMetadataWorklist_taskID")
                    .IsUnique();

                entity.HasIndex(e => new { e.taskStatus, e.whenPosted, e.taskID }, "index_AgHarvestedMetadataWorklist_statusCluster");

                entity.HasIndex(e => new { e.taskID, e.whenPosted, e.taskStatus }, "index_AgHarvestedMetadataWorklist_taskIDCluster");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.taskID)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.taskStatus)
                    .IsRequired()
                    .HasDefaultValueSql("'pending'");

                entity.Property(e => e.whenPosted)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgInternedExifCameraModel>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedExifCameraModel_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedExifCameraModel_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedExifCameraSN>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedExifCameraSN_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedExifCameraSN_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedExifLens>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedExifLens_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedExifLens_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedIptcCity>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedIptcCity_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedIptcCity_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedIptcCountry>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedIptcCountry_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedIptcCountry_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedIptcCreator>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedIptcCreator_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedIptcCreator_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedIptcIsoCountryCode>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedIptcIsoCountryCode_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedIptcIsoCountryCode_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedIptcJobIdentifier>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedIptcJobIdentifier_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedIptcJobIdentifier_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedIptcLocation>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedIptcLocation_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedIptcLocation_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgInternedIptcState>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.searchIndex, "index_AgInternedIptcState_searchIndex");

                entity.HasIndex(e => e.value, "index_AgInternedIptcState_value");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLastCatalogExport>(entity =>
            {
                entity.HasKey(e => e.image);

                entity.Property(e => e.image).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryCollection>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.genealogy, "index_AgLibraryCollection_genealogy");

                entity.HasIndex(e => new { e.parent, e.name }, "index_AgLibraryCollection_parentAndName");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.creationId)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.genealogy)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.systemOnly)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryCollectionChangeCounter>(entity =>
            {
                entity.HasKey(e => e.collection);

                entity.HasIndex(e => new { e.changeCounter, e.collection }, "index_AgLibraryCollectionChangeCounter_changeCounter");

                entity.Property(e => e.changeCounter).HasDefaultValueSql("0");
            });

            modelBuilder.Entity<AgLibraryCollectionContent>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.collection, "index_AgLibraryCollectionContent_collection");

                entity.HasIndex(e => e.owningModule, "index_AgLibraryCollectionContent_owningModule");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryCollectionCoverImage>(entity =>
            {
                entity.HasKey(e => e.collection);

                entity.Property(e => e.collectionImage).IsRequired();
            });

            modelBuilder.Entity<AgLibraryCollectionImage>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.collection, "index_AgLibraryCollectionImage_collection");

                entity.HasIndex(e => new { e.image, e.collection }, "index_AgLibraryCollectionImage_imageCollection");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.pick)
                    .IsRequired()
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<AgLibraryCollectionImageChangeCounter>(entity =>
            {
                entity.HasKey(e => e.collectionImage);

                entity.HasIndex(e => new { e.changeCounter, e.collectionImage, e.collection, e.image }, "index_AgLibraryCollectionImageChangeCounter_changeCounter");

                entity.Property(e => e.changeCounter).HasDefaultValueSql("0");

                entity.Property(e => e.collection).IsRequired();

                entity.Property(e => e.image).IsRequired();
            });

            modelBuilder.Entity<AgLibraryCollectionImageOzAlbumAssetIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.collection, e.ozCatalogId }, "index_AgLibraryCollectionImageOzAlbumAssetIds_collectionAlbumAssetsLookup");

                entity.HasIndex(e => new { e.ozAlbumAssetId, e.ozCatalogId, e.collectionImage, e.collection, e.image }, "index_AgLibraryCollectionImageOzAlbumAssetIds_collectionFromAlbumAssetIdLookup");

                entity.HasIndex(e => new { e.image, e.ozCatalogId }, "index_AgLibraryCollectionImageOzAlbumAssetIds_imageAlbumAssetsLookup");

                entity.HasIndex(e => new { e.collectionImage, e.ozCatalogId, e.collection, e.image }, "index_AgLibraryCollectionImageOzAlbumAssetIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.collection).IsRequired();

                entity.Property(e => e.collectionImage).IsRequired();

                entity.Property(e => e.image).IsRequired();

                entity.Property(e => e.ozAlbumAssetId).HasDefaultValueSql("\"pending\"");

                entity.Property(e => e.ozCatalogId).IsRequired();
            });

            modelBuilder.Entity<AgLibraryCollectionImageOzSortOrder>(entity =>
            {
                entity.HasKey(e => e.collectionImage);

                entity.Property(e => e.collection).IsRequired();

                entity.Property(e => e.ozSortOrder).IsRequired();

                entity.Property(e => e.positionInCollection).IsRequired();
            });

            modelBuilder.Entity<AgLibraryCollectionLabel>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryCollectionLabel_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.collection, e.label }, "index_AgLibraryCollectionLabel_collectionLabelIndex")
                    .IsUnique();

                entity.HasIndex(e => e.collection, "index_AgLibraryCollectionLabel_collectiondex");

                entity.HasIndex(e => e.label, "index_AgLibraryCollectionLabel_labelIndex");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.labelType)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryCollectionOzAlbumIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozCatalogId, e.ozAlbumId, e.collection }, "index_AgLibraryCollectionOzAlbumIds_catalogAlbumsLookup");

                entity.HasIndex(e => new { e.ozAlbumId, e.ozCatalogId, e.collection }, "index_AgLibraryCollectionOzAlbumIds_collectionFromAlbumIdLookup");

                entity.HasIndex(e => new { e.collection, e.ozCatalogId }, "index_AgLibraryCollectionOzAlbumIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.collection).IsRequired();

                entity.Property(e => e.ozAlbumId).HasDefaultValueSql("\"pending\"");

                entity.Property(e => e.ozCatalogId).IsRequired();
            });

            modelBuilder.Entity<AgLibraryCollectionStack>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryCollectionStack_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.collection, e.collapsed }, "index_AgLibraryCollectionStack_stacksForCollection");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.text)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryCollectionStackData>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.stack, e.collection, e.stackCount, e.stackParent }, "index_AgLibraryCollectionStackData");
            });

            modelBuilder.Entity<AgLibraryCollectionStackImage>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => new { e.collection, e.image, e.stack, e.position, e.collapsed }, "index_AgLibraryCollectionStackImage_getStackFromImage");

                entity.HasIndex(e => e.image, "index_AgLibraryCollectionStackImage_image");

                entity.HasIndex(e => new { e.collection, e.collapsed, e.stack, e.position, e.image }, "index_AgLibraryCollectionStackImage_orderByCollapseThenStackThenPosition");

                entity.HasIndex(e => new { e.collection, e.position, e.stack, e.image, e.collapsed }, "index_AgLibraryCollectionStackImage_orderByPositionThenStack");

                entity.HasIndex(e => new { e.collection, e.stack, e.position, e.image, e.collapsed }, "index_AgLibraryCollectionStackImage_orderByStackThenPosition");

                entity.HasIndex(e => e.stack, "index_AgLibraryCollectionStackImage_stack");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.position)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryCollectionSyncedAlbumData>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.collection, e.payloadKey }, "index_AgLibraryCollectionSyncedAlbumData_primaryKey")
                    .IsUnique();

                entity.Property(e => e.collection).IsRequired();

                entity.Property(e => e.payloadData).IsRequired();

                entity.Property(e => e.payloadKey).IsRequired();
            });

            modelBuilder.Entity<AgLibraryCollectionTrackedAssets>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozCatalogId, e.collection }, "index_AgLibraryCollectionTrackedAssets_byOzCatalogId");

                entity.HasIndex(e => new { e.collection, e.ozCatalogId }, "index_AgLibraryCollectionTrackedAssets_primaryKey")
                    .IsUnique();

                entity.Property(e => e.collection).IsRequired();

                entity.Property(e => e.ozCatalogId).HasDefaultValueSql("\"current\"");
            });

            modelBuilder.Entity<AgLibraryFace>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.cluster, "index_AgLibraryFace_cluster");

                entity.HasIndex(e => e.image, "index_AgLibraryFace_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.imageOrientation)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.origination)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.regionType)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.tl_x)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.tl_y)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.touchCount)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.touchTime)
                    .IsRequired()
                    .HasDefaultValueSql("-63113817600");
            });

            modelBuilder.Entity<AgLibraryFaceCluster>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.keyFace, "index_AgLibraryFaceCluster_keyFace");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryFaceData>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.face, "index_AgLibraryFaceData_face");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryFile>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryFile_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.folder, "index_AgLibraryFile_folder");

                entity.HasIndex(e => e.importHash, "index_AgLibraryFile_importHash");

                entity.HasIndex(e => new { e.lc_idx_filename, e.folder }, "index_AgLibraryFile_nameAndFolder")
                    .IsUnique();

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.baseName)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.extension)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.idx_filename)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.lc_idx_filename)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.lc_idx_filenameExtension)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.originalFilename)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryFileAssetMetadata>(entity =>
            {
                entity.HasKey(e => e.fileId);

                entity.HasIndex(e => new { e.sha256, e.fileSize }, "index_AgLibraryFileAssetMetadata_sha256ToFileId");

                entity.Property(e => e.fileSize).HasDefaultValueSql("0");

                entity.Property(e => e.sha256).IsRequired();
            });

            modelBuilder.Entity<AgLibraryFolder>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryFolder_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.parentId, "index_AgLibraryFolder_parentId");

                entity.HasIndex(e => new { e.rootFolder, e.pathFromRoot }, "index_AgLibraryFolder_rootFolderAndPath")
                    .IsUnique();

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.pathFromRoot)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryFolderFavorite>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryFolderFavorite_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.favorite, "index_AgLibraryFolderFavorite_favoriteIndex");

                entity.HasIndex(e => new { e.folder, e.favorite }, "index_AgLibraryFolderFavorite_folderFavoriteIndex")
                    .IsUnique();

                entity.HasIndex(e => e.folder, "index_AgLibraryFolderFavorite_folderIndex");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<AgLibraryFolderLabel>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryFolderLabel_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.folder, e.label }, "index_AgLibraryFolderLabel_folderLabelIndex")
                    .IsUnique();

                entity.HasIndex(e => e.folder, "index_AgLibraryFolderLabel_folderdex");

                entity.HasIndex(e => e.label, "index_AgLibraryFolderLabel_labelIndex");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.labelType)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryFolderStack>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryFolderStack_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.collapsed, "index_AgLibraryFolderStack_collapsed");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.text)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryFolderStackData>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.stack, e.stackCount, e.stackParent }, "index_AgLibraryFolderStackData");
            });

            modelBuilder.Entity<AgLibraryFolderStackImage>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => new { e.image, e.stack, e.position, e.collapsed }, "index_AgLibraryFolderStackImage_getStackFromImage");

                entity.HasIndex(e => new { e.collapsed, e.stack, e.position, e.image }, "index_AgLibraryFolderStackImage_orderByCollapseThenStackThenPosition");

                entity.HasIndex(e => new { e.position, e.stack, e.image, e.collapsed }, "index_AgLibraryFolderStackImage_orderByPositionThenStack");

                entity.HasIndex(e => new { e.stack, e.position, e.image, e.collapsed }, "index_AgLibraryFolderStackImage_orderByStackThenPosition");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.position)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryIPTC>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_AgLibraryIPTC_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryImageChangeCounter>(entity =>
            {
                entity.HasKey(e => e.image);

                entity.HasIndex(e => new { e.changeCounter, e.image }, "index_AgLibraryImageChangeCounter_changeCounter");

                entity.Property(e => e.changeCounter).HasDefaultValueSql("0");

                entity.Property(e => e.changedAtTime).HasDefaultValueSql("''");

                entity.Property(e => e.localTimeOffsetSecs).HasDefaultValueSql("0");
            });

            modelBuilder.Entity<AgLibraryImageOzAssetIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozAssetId, e.ozCatalogId, e.image, e.ownedByCatalog }, "index_AgLibraryImageOzAssetIds_imageFromAssetIdLookup");

                entity.HasIndex(e => new { e.image, e.ozCatalogId }, "index_AgLibraryImageOzAssetIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.image).IsRequired();

                entity.Property(e => e.ownedByCatalog).HasDefaultValueSql("'Y'");

                entity.Property(e => e.ozAssetId).HasDefaultValueSql("\"pending\"");

                entity.Property(e => e.ozCatalogId).IsRequired();
            });

            modelBuilder.Entity<AgLibraryImageSaveXMP>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.taskID, "IX_AgLibraryImageSaveXMP_taskID")
                    .IsUnique();

                entity.HasIndex(e => new { e.taskStatus, e.whenPosted, e.taskID }, "index_AgLibraryImageSaveXMP_statusCluster");

                entity.HasIndex(e => new { e.taskID, e.whenPosted, e.taskStatus }, "index_AgLibraryImageSaveXMP_taskIDCluster");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.taskID)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.taskStatus)
                    .IsRequired()
                    .HasDefaultValueSql("'pending'");

                entity.Property(e => e.whenPosted)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryImageSearchData>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_AgLibraryImageSearchData_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryImageSyncedAssetData>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.image, e.payloadKey }, "index_AgLibraryImageSyncedAssetData_primaryKey")
                    .IsUnique();

                entity.Property(e => e.image).IsRequired();

                entity.Property(e => e.payloadData).IsRequired();

                entity.Property(e => e.payloadKey).IsRequired();
            });

            modelBuilder.Entity<AgLibraryImageXMPUpdater>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.taskID, "IX_AgLibraryImageXMPUpdater_taskID")
                    .IsUnique();

                entity.HasIndex(e => new { e.taskStatus, e.whenPosted, e.taskID }, "index_AgLibraryImageXMPUpdater_statusCluster");

                entity.HasIndex(e => new { e.taskID, e.whenPosted, e.taskStatus }, "index_AgLibraryImageXMPUpdater_taskIDCluster");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.taskID)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.taskStatus)
                    .IsRequired()
                    .HasDefaultValueSql("'pending'");

                entity.Property(e => e.whenPosted)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryImport>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.importDate)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryImportImage>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => new { e.image, e.import }, "index_AgLibraryImportImage_imageAndImport")
                    .IsUnique();

                entity.HasIndex(e => e.import, "index_AgLibraryImportImage_import");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryKeyword>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryKeyword_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.genealogy, "index_AgLibraryKeyword_genealogy");

                entity.HasIndex(e => new { e.parent, e.lc_name }, "index_AgLibraryKeyword_parentAndLcName")
                    .IsUnique();

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.dateCreated)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.genealogy)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.imageCountCache).HasDefaultValueSql("-1");

                entity.Property(e => e.includeOnExport).HasDefaultValueSql("1");

                entity.Property(e => e.includeParents).HasDefaultValueSql("1");

                entity.Property(e => e.includeSynonyms).HasDefaultValueSql("1");
            });

            modelBuilder.Entity<AgLibraryKeywordCooccurrence>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => new { e.tag1, e.value, e.tag2 }, "index_AgLibraryKeywordCooccurrence_tag1Search");

                entity.HasIndex(e => new { e.tag1, e.tag2 }, "index_AgLibraryKeywordCooccurrence_tagsLookup");

                entity.HasIndex(e => e.value, "index_AgLibraryKeywordCooccurrence_valueIndex");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.tag1)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.tag2)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.value)
                    .IsRequired()
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<AgLibraryKeywordFace>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.face, "index_AgLibraryKeywordFace_face");

                entity.HasIndex(e => e.tag, "index_AgLibraryKeywordFace_tag");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryKeywordImage>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_AgLibraryKeywordImage_image");

                entity.HasIndex(e => e.tag, "index_AgLibraryKeywordImage_tag");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryKeywordPopularity>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.tag, "IX_AgLibraryKeywordPopularity_tag")
                    .IsUnique();

                entity.HasIndex(e => e.popularity, "index_AgLibraryKeywordPopularity_popularity");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.occurrences)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.popularity)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.tag)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryKeywordSynonym>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.keyword, "index_AgLibraryKeywordSynonym_keyword");

                entity.HasIndex(e => e.lc_name, "index_AgLibraryKeywordSynonym_lc_name");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryOzCommentIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozCatalogId, e.ozSpaceId, e.ozAssetId }, "index_AgLibraryOzCommentIds_byAsset");

                entity.HasIndex(e => new { e.ozCatalogId, e.ozSpaceId }, "index_AgLibraryOzCommentIds_bySpace");

                entity.HasIndex(e => new { e.ozCatalogId, e.ozCommentId }, "index_AgLibraryOzCommentIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.ozAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.ozCommentId).IsRequired();

                entity.Property(e => e.ozSpaceId).IsRequired();

                entity.Property(e => e.timestamp).IsRequired();
            });

            modelBuilder.Entity<AgLibraryOzFavoriteIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozCatalogId, e.ozSpaceId, e.ozAssetId }, "index_AgLibraryOzFavoriteIds_byAsset");

                entity.HasIndex(e => new { e.ozCatalogId, e.ozSpaceId }, "index_AgLibraryOzFavoriteIds_bySpace");

                entity.HasIndex(e => new { e.ozCatalogId, e.ozFavoriteId }, "index_AgLibraryOzFavoriteIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.ozAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.ozFavoriteId).IsRequired();

                entity.Property(e => e.ozSpaceId).IsRequired();

                entity.Property(e => e.timestamp).IsRequired();
            });

            modelBuilder.Entity<AgLibraryOzFeedbackInfo>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => new { e.ozAssetId, e.ozSpaceId, e.ozCatalogId }, "index_AgLibraryOzFeedbackInfo_assetAndSpaceAndCatalog")
                    .IsUnique();

                entity.HasIndex(e => e.lastFeedbackTime, "index_AgLibraryOzFeedbackInfo_lastFeedbackTime");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.image)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.newCommentCount)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.newFavoriteCount)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.ozAssetId)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.ozCatalogId)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.ozSpaceId)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryPublishedCollection>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.genealogy, "index_AgLibraryPublishedCollection_genealogy");

                entity.HasIndex(e => new { e.parent, e.name }, "index_AgLibraryPublishedCollection_parentAndName");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.creationId)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.genealogy)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.systemOnly)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryPublishedCollectionContent>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.collection, "index_AgLibraryPublishedCollectionContent_collection");

                entity.HasIndex(e => e.owningModule, "index_AgLibraryPublishedCollectionContent_owningModule");

                entity.Property(e => e.id_local).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgLibraryPublishedCollectionImage>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.collection, "index_AgLibraryPublishedCollectionImage_collection");

                entity.HasIndex(e => new { e.image, e.collection }, "index_AgLibraryPublishedCollectionImage_imageCollection");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.pick)
                    .IsRequired()
                    .HasDefaultValueSql("0");
            });

            modelBuilder.Entity<AgLibraryPublishedCollectionLabel>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgLibraryPublishedCollectionLabel_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.collection, e.label }, "index_AgLibraryPublishedCollectionLabel_collectionLabelIndex")
                    .IsUnique();

                entity.HasIndex(e => e.collection, "index_AgLibraryPublishedCollectionLabel_collectiondex");

                entity.HasIndex(e => e.label, "index_AgLibraryPublishedCollectionLabel_labelIndex");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.labelType)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryRootFolder>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.absolutePath, "IX_AgLibraryRootFolder_absolutePath")
                    .IsUnique();

                entity.HasIndex(e => e.id_global, "IX_AgLibraryRootFolder_id_global")
                    .IsUnique();

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.absolutePath)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgLibraryUpdatedImages>(entity =>
            {
                entity.HasKey(e => e.image);

                entity.Property(e => e.image).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgMRULists>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.listID, "index_AgMRULists_listID");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.listID)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.timestamp)
                    .IsRequired()
                    .HasDefaultValueSql("0");

                entity.Property(e => e.value)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgMetadataSearchIndex>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_AgMetadataSearchIndex_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.exifSearchIndex)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.iptcSearchIndex)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.otherSearchIndex)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.searchIndex)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgOutputImageAsset>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => new { e.moduleId, e.collection, e.image, e.assetId }, "index_AgOutputImageAsset_findByCollectionGroupByImage");

                entity.HasIndex(e => new { e.collection, e.image, e.moduleId, e.assetId }, "index_AgOutputImageAsset_findByCollectionImage");

                entity.HasIndex(e => e.image, "index_AgOutputImageAsset_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.assetId)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.moduleId)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgOzSpaceAlbumIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozAlbumId, e.ozCatalogId }, "index_AgOzSpaceAlbumIds_byAlbumId");

                entity.HasIndex(e => new { e.ozSpaceId, e.ozCatalogId }, "index_AgOzSpaceAlbumIds_bySpaceId");

                entity.HasIndex(e => e.ozSpaceAlbumId, "index_AgOzSpaceAlbumIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.ozAlbumId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.ozSpaceAlbumId).IsRequired();

                entity.Property(e => e.ozSpaceId).IsRequired();
            });

            modelBuilder.Entity<AgOzSpaceIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozCatalogId, e.ozSpaceId }, "index_AgOzSpaceIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.ozSpaceId).IsRequired();
            });

            modelBuilder.Entity<AgPendingOzAlbumAssetIds>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozAlbumAssetId, e.ozAssetId, e.ozCatalogId, e.ozAlbumId }, "index_AgPendingOzAlbumAssetIds_byAlbumAssetId");

                entity.HasIndex(e => new { e.ozAlbumId, e.ozCatalogId, e.ozAlbumAssetId, e.ozAssetId }, "index_AgPendingOzAlbumAssetIds_byAlbumId");

                entity.HasIndex(e => new { e.ozAssetId, e.ozCatalogId, e.ozAlbumAssetId, e.ozAlbumId }, "index_AgPendingOzAlbumAssetIds_byAssetId");

                entity.HasIndex(e => new { e.ozCatalogId, e.ozAlbumAssetId, e.ozAssetId, e.ozAlbumId }, "index_AgPendingOzAlbumAssetIds_primaryKey")
                    .IsUnique();

                entity.Property(e => e.ozAlbumAssetId).IsRequired();

                entity.Property(e => e.ozAlbumId).IsRequired();

                entity.Property(e => e.ozAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.ozIsCover).HasDefaultValueSql("0");

                entity.Property(e => e.ozSortOrder).HasDefaultValueSql("\"\"");
            });

            modelBuilder.Entity<AgPendingOzAssetBinaryDownloads>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozCatalogId, e.whenQueued, e.state, e.ozAssetId, e.path }, "index_AgPendingOzAssetBinaryDownloads_catalogIdOrdering");

                entity.HasIndex(e => new { e.ozAssetId, e.ozCatalogId }, "index_AgPendingOzAssetBinaryDownloads_primaryKey")
                    .IsUnique();

                entity.HasIndex(e => new { e.state, e.ozCatalogId, e.whenQueued, e.ozAssetId }, "index_AgPendingOzAssetBinaryDownloads_stateSearches");

                entity.Property(e => e.ozAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.path).IsRequired();

                entity.Property(e => e.state).HasDefaultValueSql("\"master\"");

                entity.Property(e => e.whenQueued).IsRequired();
            });

            modelBuilder.Entity<AgPendingOzAssets>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.ozAssetId, e.ozCatalogId }, "index_AgPendingOzAssets_primaryKey")
                    .IsUnique();

                entity.HasIndex(e => new { e.state, e.ozCatalogId, e.ozAssetId }, "index_AgPendingOzAssets_stateSearches");

                entity.Property(e => e.ozAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.path).IsRequired();

                entity.Property(e => e.payload).IsRequired();

                entity.Property(e => e.state).HasDefaultValueSql("\"needs_binary\"");
            });

            modelBuilder.Entity<AgPhotoComment>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgPhotoComment_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.photo, "index_AgPhotoComment_photo");

                entity.HasIndex(e => e.remoteId, "index_AgPhotoComment_remoteId");

                entity.HasIndex(e => e.remotePhoto, "index_AgPhotoComment_remotePhoto");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.remoteId)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgPhotoProperty>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgPhotoProperty_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.photo, e.propertySpec }, "index_AgPhotoProperty_pluginKey")
                    .IsUnique();

                entity.HasIndex(e => e.propertySpec, "index_AgPhotoProperty_propertySpec");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<AgPhotoPropertyArrayElement>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgPhotoPropertyArrayElement_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.photo, e.propertySpec, e.arrayIndex }, "index_AgPhotoPropertyArrayElement_pluginKey")
                    .IsUnique();

                entity.HasIndex(e => e.propertySpec, "index_AgPhotoPropertyArrayElement_propertySpec");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.arrayIndex)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<AgPhotoPropertySpec>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgPhotoPropertySpec_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.sourcePlugin, e.key, e.pluginVersion }, "index_AgPhotoPropertySpec_pluginKey")
                    .IsUnique();

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.key)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.pluginVersion)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.sourcePlugin)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgPublishListenerWorklist>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.taskID, "IX_AgPublishListenerWorklist_taskID")
                    .IsUnique();

                entity.HasIndex(e => new { e.taskStatus, e.whenPosted, e.taskID }, "index_AgPublishListenerWorklist_statusCluster");

                entity.HasIndex(e => new { e.taskID, e.whenPosted, e.taskStatus }, "index_AgPublishListenerWorklist_taskIDCluster");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.taskID)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.taskStatus)
                    .IsRequired()
                    .HasDefaultValueSql("'pending'");

                entity.Property(e => e.whenPosted)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgRemotePhoto>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgRemotePhoto_id_global")
                    .IsUnique();

                entity.HasIndex(e => new { e.collection, e.photoNeedsUpdating }, "index_AgRemotePhoto_collectionNeedsUpdating");

                entity.HasIndex(e => new { e.collection, e.photo }, "index_AgRemotePhoto_collectionPhoto")
                    .IsUnique();

                entity.HasIndex(e => new { e.collection, e.remoteId }, "index_AgRemotePhoto_collectionRemoteId")
                    .IsUnique();

                entity.HasIndex(e => e.photo, "index_AgRemotePhoto_photo");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();

                entity.Property(e => e.photoNeedsUpdating).HasDefaultValueSql("2");
            });

            modelBuilder.Entity<AgSearchablePhotoProperty>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgSearchablePhotoProperty_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.lc_idx_internalValue, "index_AgSearchablePhotoProperty_lc_idx_internalValue");

                entity.HasIndex(e => new { e.photo, e.propertySpec }, "index_AgSearchablePhotoProperty_pluginKey")
                    .IsUnique();

                entity.HasIndex(e => new { e.propertySpec, e.internalValue }, "index_AgSearchablePhotoProperty_propertyValue");

                entity.HasIndex(e => new { e.propertySpec, e.lc_idx_internalValue }, "index_AgSearchablePhotoProperty_propertyValue_lc");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<AgSearchablePhotoPropertyArrayElement>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.id_global, "IX_AgSearchablePhotoPropertyArrayElement_id_global")
                    .IsUnique();

                entity.HasIndex(e => e.lc_idx_internalValue, "index_AgSearchablePhotoPropertyArrayElement_lc_idx_internalValue");

                entity.HasIndex(e => new { e.photo, e.propertySpec, e.arrayIndex }, "index_AgSearchablePhotoPropertyArrayElement_pluginKey")
                    .IsUnique();

                entity.HasIndex(e => new { e.propertySpec, e.internalValue }, "index_AgSearchablePhotoPropertyArrayElement_propertyValue");

                entity.HasIndex(e => new { e.propertySpec, e.lc_idx_internalValue }, "index_AgSearchablePhotoPropertyArrayElement_propertyValue_lc");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.arrayIndex)
                    .IsRequired()
                    .HasDefaultValueSql("''");

                entity.Property(e => e.id_global).IsRequired();
            });

            modelBuilder.Entity<AgSourceColorProfileConstants>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_AgSourceColorProfileConstants_image");

                entity.HasIndex(e => new { e.profileName, e.image }, "index_AgSourceColorProfileConstants_imageSourceColorProfileName");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.profileName)
                    .IsRequired()
                    .HasDefaultValueSql("'Untagged'");
            });

            modelBuilder.Entity<AgSpecialSourceContent>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.owningModule, "index_AgSpecialSourceContent_owningModule");

                entity.HasIndex(e => new { e.source, e.owningModule }, "index_AgSpecialSourceContent_sourceModule")
                    .IsUnique();

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.source)
                    .IsRequired()
                    .HasDefaultValueSql("''");
            });

            modelBuilder.Entity<AgTempImages>(entity =>
            {
                entity.HasKey(e => e.image);

                entity.Property(e => e.image).ValueGeneratedNever();
            });

            modelBuilder.Entity<AgUnsupportedOzAssets>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.ozAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.path).IsRequired();

                entity.Property(e => e.payload).IsRequired();

                entity.Property(e => e.type).IsRequired();
            });

            modelBuilder.Entity<AgVideoInfo>(entity =>
            {
                entity.HasKey(e => e.id_local);

                entity.HasIndex(e => e.image, "index_AgVideoInfo_image");

                entity.Property(e => e.id_local).ValueGeneratedNever();

                entity.Property(e => e.has_audio).HasDefaultValueSql("1");

                entity.Property(e => e.has_video).HasDefaultValueSql("1");

                entity.Property(e => e.poster_frame)
                    .IsRequired()
                    .HasDefaultValueSql("'0000000000000000/0000000000000001'");

                entity.Property(e => e.trim_end)
                    .IsRequired()
                    .HasDefaultValueSql("'0000000000000000/0000000000000001'");

                entity.Property(e => e.trim_start)
                    .IsRequired()
                    .HasDefaultValueSql("'0000000000000000/0000000000000001'");
            });

            modelBuilder.Entity<LrMobileSyncChangeCounter>(entity =>
            {
                entity.Property(e => e.changeCounter).IsRequired();
            });

            modelBuilder.Entity<MigratedCollectionImages>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.localCollectionImageId, e.ozCatalogId }, "IX_MigratedCollectionImages_localCollectionImageId_ozCatalogId")
                    .IsUnique();

                entity.Property(e => e.ozAlbumAssetId).IsRequired();

                entity.Property(e => e.ozAlbumId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();
            });

            modelBuilder.Entity<MigratedCollections>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.localId, e.ozCatalogId }, "IX_MigratedCollections_localId_ozCatalogId")
                    .IsUnique();

                entity.Property(e => e.ozAlbumId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();

                entity.Property(e => e.ozName).IsRequired();
            });

            modelBuilder.Entity<MigratedImages>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => new { e.localId, e.ozCatalogId }, "IX_MigratedImages_localId_ozCatalogId")
                    .IsUnique();

                entity.Property(e => e.ozAssetId).IsRequired();

                entity.Property(e => e.ozCatalogId).IsRequired();
            });

            modelBuilder.Entity<MigratedInfo>(entity =>
            {
                entity.HasKey(e => e.ozCatalogId);

                entity.Property(e => e.migrationStatus).IsRequired();

                entity.Property(e => e.timestamp).IsRequired();
            });

            modelBuilder.Entity<MigrationSchemaVersion>(entity =>
            {
                entity.HasKey(e => e.version);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}